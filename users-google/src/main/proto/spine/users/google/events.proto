//
// Copyright 2019, TeamDev. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

syntax = "proto3";

package spine.users.google;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option java_package = "io.spine.users.google.event";
option java_outer_classname = "EventsProto";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;

import "spine/change/change.proto";
import "spine/net/email_address.proto";
import "spine/net/internet_domain.proto";
import "spine/net/net_change.proto";
import "spine/users/identifiers.proto";
import "spine/users/google/identifiers.proto";

// This file contains definitions of external events that may happen to a Google Group.
// These events aren't produced by any aggregate inside the application. Instead, they should be
// derived from Google APIs (Directory API).
//
// To match Google's ID with the corresponding `GroupId` in Java, please use
// `io.spine.users.google.server.IdMapping`.
//
// Please refer to Directory API documentation:
// * [on Groups;](https://developers.google.com/admin-sdk/directory/v1/reference/groups)
// * [on Roles;](https://developers.google.com/admin-sdk/directory/v1/guides/manage-roles)
// * [on Members.](https://developers.google.com/admin-sdk/directory/v1/reference/members)
//

// A Google Group was created.
message GoogleGroupCreated {

    // A newly generated identifier of the group.
    GroupId id = 1;

    // An ID of the group at Google.
    GoogleGroupId google_id = 2 [(required) = true, (validate) = true];

    // A name to display on UI.
    string display_name = 3 [(required) = true];

    // An email of the group.
    net.EmailAddress email = 4 [(required) = true];

    // A description of the group.
    string description = 5;

    // A list of email aliases of the group.
    repeated net.EmailAddress alias = 6;

    // A domain the groups belongs to.
    net.InternetDomain domain = 7;
}

// A Google Group joined a new parent Google Group.
message GoogleGroupJoinedParentGroup {

    // The group which got new email address.
    GroupId group = 1;

    // A new parent.
    GroupId new_parent_id = 2 [(required) = true];

    // A role.
    string role = 3 [(required) = true];
}

// A Google Group left a parent Google Group.
message GoogleGroupLeftParentGroup {

    // The group which left the parent group.
    GroupId group = 1;

    // An ID of the parent group.
    GroupId parent_group = 2 [(required) = true];
}

// A name of the Google Group was changed.
message GoogleGroupRenamed {

    // The group which was renamed.
    GroupId group = 1;

    // A change in the display name.
    change.StringChange display_name = 2 [(required) = true];
}

// A Google Group was deleted.
message GoogleGroupDeleted {

    // The deleted group.
    GroupId group = 1;
}

// An email address of a Group changed.
message GoogleGroupEmailChanged {

    // The group which got new email address.
    GroupId id = 1;

    // The change in the email address.
    net.EmailAddressChange email = 2 [(required) = true];
}

// A description of a group changed.
//
message GoogleGroupDescriptionChanged {

    // The group which description was changed.
    GroupId group = 1;

    // The change in the group description.
    change.StringChange description = 2 [(required) = true];
}

// A list of group aliases changed.
message GoogleGroupAliasesChanged {

    GroupId id = 1;

    // The new list of aliases.
    repeated net.EmailAddress new_alias = 2;
}
