//
// Copyright 2019, TeamDev. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

syntax = "proto3";

package spine.users;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option java_package = "io.spine.users.event";
option java_outer_classname = "EventsProto";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;

import "spine/core/user_id.proto";
import "spine/net/email_address.proto";
import "spine/net/internet_domain.proto";
import "spine/users/identifiers.proto";
import "spine/users/user.proto";
import "spine/users/group.proto";

// A new user account was created.
message UserAccountCreated {

    // The ID of the account.
    core.UserId account = 1;

    // The user for whom the account was created.
    User user = 2 [(required) = true];
}

// An account of a user was deleted.
message UserAccountDeleted {

    // The ID of the deleted account.
    core.UserId account = 1;
}

// An account of a user was suspended.
message UserAccountSuspended {

    // The ID of the suspended account.
    core.UserId account = 1;
}

// A previously suspended account of a user was resumed.
message UserAccountResumed {

    // The ID of the resumed account.
    core.UserId account = 1;
}

// The new group was created.
message GroupCreated {

    GroupId group = 1;

    // The name of the group to display on UI.
    string display_name = 2 [(required) = true];

    // Human-friendly description of the group.
    string description = 3;

    // The email address of the group, if available.
    net.EmailAddress email = 6;
}

// A group was deleted.
message GroupDeleted {

    GroupId group = 1;
}

// A group was added to another (parent) group.
message GroupAddedToGroup {

    // The group which became a member of the parent group.
    GroupId group = 1;

    // The parent group.
    GroupId parent_group = 2 [(required) = true];

    // The role which this group has in the parent group.
    //
    // If specified, this role would be default for all users of the enclosed group
    // in the parent group.
    //
    Role role = 3;
}

// The group left its parent group.
message GroupRemovedFromGroup {

    // The group was removed from the parent group.
    GroupId group = 1;

    // The parent group.
    GroupId parent_group = 2 [(required) = true];

    // The role which the group had in the parent group, if available.
    Role role = 3 [(required) = true];
}


// The group was renamed.
message GroupRenamed {

    // The group which gained a new name.
    GroupId group = 1;

    // The new name.
    string new_name = 2 [(required) = true];

    // The previous name.
    string old_name = 3 [(required) = true];
}

// The group email address was changed.
message GroupEmailChanged {

    GroupId group = 1;

    // A new email address of the group.
    net.EmailAddress new_email = 2 [(required) = true];

    // An old email address of the group.
    net.EmailAddress old_email = 3 [(required) = true];
}

// The group description changed.
message GroupDescriptionChanged {

    GroupId group = 1;

    // A new human-friendly description of the group.
    string new_description = 2 [(required) = true];

    // An old human-friendly description of the group.
    string old_description = 3 [(required) = true];
}

// A user was added to a group.
message UserAddedToGroup {

    core.UserId user = 1;

    // An ID of the group.
    users.GroupId group = 2 [(required) = true];

    // A role of a user in the group.
    Role role = 3 [(required) = true];
}

// A user was removed a group.
message UserRemovedFromGroup {

    core.UserId user = 1;

    // The group from which the user removed.
    users.GroupId group = 2 [(required) = true];

    // The role the user had in the group.
    Role role = 3 [(required) = true];
}
