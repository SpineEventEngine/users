//
// Copyright (c) 2000-2018 TeamDev. All rights reserved.
// TeamDev PROPRIETARY and CONFIDENTIAL.
// Use is subject to license terms.
//

syntax = "proto3";

package spine.users.c.organization;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option java_package = "io.spine.users.organization";
option java_outer_classname = "EventsProto";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;

import "spine/core/tenant_id.proto";
import "spine/core/user_id.proto";
import "spine/net/internet_domain.proto";
import "spine/users/identifiers.proto";
import "spine/users/c/organization/org_attribute.proto";

// The event is emitted when a new organization is created.
//
message OrganizationCreated {

    OrganizationId id = 1;

    // The name of an organization to display on UI.
    string display_name = 2 [(required) = true];

    // The domain of the organization.
    spine.net.InternetDomain domain = 3;

    // The attributes of the organization.
    repeated OrgAttribute attribute = 4;

    // A tenant associated with the organization.
    spine.core.TenantId tenant = 5 [(required) = true];

    // The ID of an owner.
    spine.core.UserId owner = 6 [(required) = true];
}

// The event is emitted when an owner of an organization is changed.
//
message OrganizationOwnerChanged {

    OrganizationId id = 1;

    // The ID of the owner.
    spine.core.UserId owner = 2 [(required) = true];
}

// The event is emitted when an organization is deleted.
//
message OrganizationDeleted {

    OrganizationId id = 1;
}

// The event is emitted when an attribute of the organization is added.
//
message OrganizationAttributeAdded {

    OrganizationId id = 1;

    // The added attribute.
    OrgAttribute attribute = 2 [(required) = true];
}

// The event is emitted when an attribute of the organization is removed.
//
message OrganizationAttributeRemoved {

    OrganizationId id = 1;

    // The removed attribute.
    OrgAttribute attribute = 2 [(required) = true];
}

// The event is emitted when an attribute of the organization is updated.
//
message OrganizationAttributeUpdated {

    OrganizationId id = 1;

    // The new value of an attribute.
    OrgAttribute new_attribute = 2 [(required) = true];

    // The previous value of an attribute.
    OrgAttribute old_attribute = 3 [(required) = true];
}
