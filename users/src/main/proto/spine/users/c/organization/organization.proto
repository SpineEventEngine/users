//
// Copyright (c) 2000-2018 TeamDev. All rights reserved.
// TeamDev PROPRIETARY and CONFIDENTIAL.
// Use is subject to license terms.
//

syntax = "proto3";

package spine.users.c.organization;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option java_package = "io.spine.users.c.organization";
option java_outer_classname = "OrganizationProto";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;

import "google/protobuf/any.proto";
import "spine/net/internet_domain.proto";
import "spine/core/tenant_id.proto";
import "spine/core/user_id.proto";
import "spine/users/identifiers.proto";

// An organization of a tenant.
//
// The topmost entity in organizational structure.
//
// An organization aggregates users and groups directly or in the hierarchy of organizational units
// (`OrgUnit`).
//
// ## Organization Attributes
//
// To make `Organization` meet specific requirements of the application, it can be extended by
// custom attributes.
//
// The following commands are available to work with the organization attributes:
//
// * `AddOrganizationAttribute` to add a new attribute, or replace the existing one;
// * `RemoveOrganizationAttribute` to remove an attribute;
// * `UpdateOrganizationAttribute` to update an existing attribute.
//
message Organization {
    option (entity).kind = AGGREGATE;

    OrganizationId id = 1;

    // A name of the organization to display on UI.
    string display_name = 2 [(required) = true];

    // A domain of the organization.
    net.InternetDomain domain = 3;

    // Attributes of the organization.
    map<string, google.protobuf.Any> attributes = 4;

    // A tenant associated with the organization.
    core.TenantId tenant = 5 [(required) = true];

    // An organization owner.
    core.UserId owner = 6 [(required) = true];
}
