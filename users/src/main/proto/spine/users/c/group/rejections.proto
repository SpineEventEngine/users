//
// Copyright (c) 2000-2018 TeamDev. All rights reserved.
// TeamDev PROPRIETARY and CONFIDENTIAL.
// Use is subject to license terms.
//

syntax = "proto3";

package spine.users.c.group;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option java_package = "io.spine.users.c.group";
option java_multiple_files = false;
option java_generate_equals_and_hash = true;

import "spine/core/user_id.proto";
import "spine/users/identifiers.proto";

// The rejection is generated when trying to access a group attribute that doesn't exist.
//
message GroupAttributeDoesNotExist {

    GroupId id = 1;

    // A name of the attribute.
    string attribute_name = 2 [(required) = true];
}

// The rejection is generated when trying to remove a role that isn't assigned to a group.
//
message RoleIsNotAssignedToGroup {

    GroupId id = 1;

    // An ID of the role.
    RoleId role_id = 2 [(required) = true];
}

// The rejection is generated when joining a parent group forms a cycle.
//
message GroupsCanNotFormCycles {

    GroupId id = 1;

    // A group that closes a cycle.
    GroupId closing_group = 2 [(required) = true];
}

// The rejection is generated when trying to remove the last owner of the group.
//
message GroupMustHaveAnOwner {

    GroupId id = 1;
}

// The rejection is generatied when trying to refer to an unexisting owner of the group.
//
message NoSuchOwnerInGroup {

    GroupId id = 1;

    // The referenced owner.
    core.UserId owner = 2 [(required) = true];
}
