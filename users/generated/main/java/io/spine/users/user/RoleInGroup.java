// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spine/users/user/user.proto

package io.spine.users.user;

/**
 * <pre>
 * A role of the `User` as a member of the group.
 * This role defines whether a user is a regular member or can manage the group.
 * </pre>
 *
 * Protobuf enum {@code spine.users.user.RoleInGroup}
 */
public enum RoleInGroup
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * The default value.
   * </pre>
   *
   * <code>RIG_UNKNOWN = 0;</code>
   */
  RIG_UNKNOWN(0),
  /**
   * <pre>
   * A regular member of a group: can't add or remove members, rename the group, etc.
   * </pre>
   *
   * <code>MEMBER = 1;</code>
   */
  MEMBER(1),
  /**
   * <pre>
   * A privileged member with permissions to manage the group.
   * </pre>
   *
   * <code>PRIVILEGED = 2;</code>
   */
  PRIVILEGED(2),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * The default value.
   * </pre>
   *
   * <code>RIG_UNKNOWN = 0;</code>
   */
  public static final int RIG_UNKNOWN_VALUE = 0;
  /**
   * <pre>
   * A regular member of a group: can't add or remove members, rename the group, etc.
   * </pre>
   *
   * <code>MEMBER = 1;</code>
   */
  public static final int MEMBER_VALUE = 1;
  /**
   * <pre>
   * A privileged member with permissions to manage the group.
   * </pre>
   *
   * <code>PRIVILEGED = 2;</code>
   */
  public static final int PRIVILEGED_VALUE = 2;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static RoleInGroup valueOf(int value) {
    return forNumber(value);
  }

  public static RoleInGroup forNumber(int value) {
    switch (value) {
      case 0: return RIG_UNKNOWN;
      case 1: return MEMBER;
      case 2: return PRIVILEGED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<RoleInGroup>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      RoleInGroup> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<RoleInGroup>() {
          public RoleInGroup findValueByNumber(int number) {
            return RoleInGroup.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return io.spine.users.user.UserProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final RoleInGroup[] VALUES = values();

  public static RoleInGroup valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private RoleInGroup(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:spine.users.user.RoleInGroup)
}

