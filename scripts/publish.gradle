//
// Copyright 2017, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

// Apply this script to add ability to publish the needed artifacts.

String repositoryUserName = null
String repositoryUserPassword = null

final Properties properties = new Properties()
final File credentialsFile = project.file(credentialsPropertyFile)
if (credentialsFile.exists()) {
    properties.load(credentialsFile.newDataInputStream())
    repositoryUserName = properties.getProperty("user.name")
    repositoryUserPassword = properties.getProperty("user.password")
}

task checkPublishingCredentials {
    doLast {
        if (repositoryUserName == null || repositoryUserPassword == null) {
            throw new InvalidUserDataException("Please set up valid credentials. " +
                    "Credentials must be set in '${credentialsPropertyFile}' file in the project\'s root.")
        }
        println "Publishing build as ${repositoryUserName}"
    }
}

task publish {
    doLast {
        // Keep the task for dynamic generation while publishing.
    }
}

@SuppressWarnings("GroovyAssignabilityCheck") // Avoiding `Method call is ambiguous` warning in IDEA.
void dependPublish(final Project project) {
    final Set<Task> credentialsTasks = getTasksByName("readPublishingCredentials", false)
    project.getTasksByName("publish", false).each { final task ->
        task.dependsOn credentialsTasks
    }
    publish.dependsOn project.getTasksByName("publish", false)
}

projectsToPublish.each {
    project(":$it") { final currentProject ->
        apply plugin: 'maven-publish'

        // Artifact IDs are composed as "spine-<project.name>-core". Example:
        //
        //      "spine-server-core"
        //
        // That helps to distinguish resulting JARs in the final assembly, such as WAR package.
        // In addition, "-core" suffix serves as a type marker, helping to identify them among similar modules.
        //
        // Example:
        //
        //      "spine-server-core" (core Spine functionality for back-end)
        //  vs.
        //      "spine-server-gae" (Google AppEngine-based functionality for back-end)
        //
        // However, the artifact IDs for "users" and "values" domains do not have "-core" suffix,
        // as they do not require any additional identification.
        //
        final boolean isCoreSubproject = currentProject.name.equals("core")
        final boolean shouldAddSuffix = isCoreSubproject
        final String artifactIdSuffix = shouldAddSuffix ? "-core" : ""
        // If publishing `core` sub-project use the name of the library.
        final String subprojectArtifactName = isCoreSubproject ? "users" : currentProject.name
        final String artifactIdForPublishing = "spine-${subprojectArtifactName}" + artifactIdSuffix

        publishing {
            publications {
                mavenJava(MavenPublication) {
                    groupId = "${group}"
                    artifactId = "${artifactIdForPublishing}"
                    version = "${currentProject.version}"

                    from components.java

                    artifact sourceJar
                    artifact testOutputJar
                    artifact javadocJar
                }
            }
        }

        // As per https://discuss.gradle.org/t/maven-publish-specify-a-repo-as-being-a-snapshot-repo/374/2
        final String repositorySuffix = currentProject.version.endsWith('-SNAPSHOT') ? '-snapshots' : ''

        publishing {
            repositories {
                maven {
                    url = "http://maven.teamdev.com/repository/spine${repositorySuffix}"
                    credentials {
                        username = "${repositoryUserName}"
                        password = "${repositoryUserPassword}"
                    }
                }
            }
        }

        dependPublish(project)
    }
}
