//
// Copyright (c) 2000-2018 TeamDev. All rights reserved.
// TeamDev PROPRIETARY and CONFIDENTIAL.
// Use is subject to license terms.
//

syntax = "proto3";

package spine.users.c.orgunit;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option java_package = "io.spine.users.orgunit";
option java_outer_classname = "EventsProto";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;

import "spine/core/user_id.proto";
import "spine/net/internet_domain.proto";
import "spine/users/identifiers.proto";
import "spine/users/values.proto";
import "spine/users/c/orgunit/orgunit_attribute.proto";

// The event is emitted when a new orgunit is created.
//
message OrgUnitCreated {

    OrgUnitId id = 1;

    // The name of the orgunit to display on UI.
    string display_name = 2 [(required) = true];

    // An interent domain of the orgunit.
    spine.net.InternetDomain domain = 3;

    // The parent entity in the organizational structure.
    ParentEntity parent_entity = 4 [(required) = true];

    // The attributes of the orgunit.
    repeated OrgUnitAttribute attribute = 5;

    // The orgunit owner.
    spine.core.UserId owner = 6 [(required) = true];
}

// The event is emitted when an owner of an orgunit is changed.
//
message OrgUnitOwnerChanged {

    OrgUnitId id = 1;

    // The ID of the new owner.
    spine.core.UserId new_owner = 2 [(required) = true];

    // The ID of the old owner.
    spine.core.UserId old_owner = 3 [(required) = true];
}

// The event is emitted when an orgunit is moved to another organization or orgunit.
//
message OrgUnitMoved {
    option (required_field) = "unit|organization";

    OrgUnitId id = 1;

    // The new parent entity in the organizational structure.
    ParentEntity new_parent_entity = 2 [(required) = true];

    // The former parent entity in the organizational structure.
    ParentEntity old_parent_entity = 3 [(required) = true];
}

// The event is emitted when an orgunit is deleted.
//
message OrgUnitDeleted {

    OrgUnitId id = 1;
}

// The event is emitted when an attribute of the orgunit is added.
//
message OrgUnitAttributeAdded {

    OrgUnitId id = 1;

    // The added attribute.
    OrgUnitAttribute attribute = 2 [(required) = true];
}

// The event is emitted when an attribute of the orgunit is removed.
//
message OrgUnitAttributeRemoved {

    OrgUnitId id = 1;

    // The removed attribute.
    OrgUnitAttribute attribute = 2 [(required) = true];
}

// The event is emitted when an attribute of the orgunit is updated.
//
message OrgUnitAttributeUpdated {

    OrgUnitId id = 1;

    // The new value of an attribute.
    OrgUnitAttribute new_attribute = 2 [(required) = true];

    // The previous value of an attribute.
    OrgUnitAttribute old_attribute = 3 [(required) = true];
}
